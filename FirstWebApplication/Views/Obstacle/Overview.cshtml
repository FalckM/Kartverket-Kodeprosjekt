@model FirstWebApplication.Models.ObstacleData

@{
    ViewData["Title"] = "Registration Overview";
}

<style>
    #mapid-overview {
        height: 320px;
        width: 100%;
    }
</style>

<div class="max-w-xl mx-auto p-6 bg-white rounded-lg shadow-md mt-8">
    <h1 class="text-3xl font-bold text-gray-900 mb-2">Thank you for your registration!</h1>
    <p class="text-gray-600 text-lg mb-6">We appreciate you taking the time to register this obstacle.</p>

    <div class="space-y-4">
        <div>
            <h2 class="text-lg font-semibold text-gray-700">Obstacle name:</h2>
            <p class="text-gray-800">@Model.ObstacleName</p>
        </div>

        <div>
            <h2 class="text-lg font-semibold text-gray-700">Height:</h2>
            <p class="text-gray-800">@Model.ObstacleHeight m</p>
        </div>

        <div>
            <h2 class="text-lg font-semibold text-gray-700">Description:</h2>
            <p class="text-gray-800">@Model.ObstacleDescription</p>
        </div>

        <div>
            <h2 class="text-lg font-semibold text-gray-700">Obstacle location:</h2>
            <div id="mapid-overview" class="w-full h-80 rounded-md mt-2"></div>
        </div>
    </div>

    <div class="flex justify-end space-x-4 mt-6">
        <a asp-action="DataForm" asp-controller="Obstacle" class="py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg shadow-md transition duration-150 ease-in-out">
            Register New Obstacle
        </a>
        <a href="@Url.Action("Index", "Home")" class="py-2 px-4 bg-indigo-600 hover:bg-indigo-700 text-white font-semibold rounded-lg shadow-md transition duration-150 ease-in-out">
            All done!
        </a>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const geoJsonString = '@Html.Raw(Model.ObstacleGeometry)';

            if (geoJsonString) {
                try {
                    const geoJsonData = JSON.parse(geoJsonString);
                    const map = L.map('mapid-overview').setView([0, 0], 2);
                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                    }).addTo(map);

                    const obstacleLayer = L.geoJSON(geoJsonData).addTo(map);
                    map.fitBounds(obstacleLayer.getBounds());
                } catch (e) {
                    console.error("Failed to parse GeoJSON data:", e);
                }
            }
        });
    </script>
}
