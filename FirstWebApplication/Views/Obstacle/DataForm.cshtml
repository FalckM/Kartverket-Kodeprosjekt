@model FirstWebApplication.Models.ObstacleData

@{
    ViewData["Title"] = "Register an obstacle";
}

<style>
    #mapid {
        height: 450px;
        width: 100%;
    }
</style>

<div class="max-w-4xl mx-auto px-4 py-8 bg-white rounded-lg shadow-lg">
    <h1 class="text-3xl font-bold mb-2 text-center text-gray-800">Register an obstacle</h1>
    <p class="text-gray-600 mb-6 text-center">Fill out the form below to register a new obstacle</p>

    <form asp-action="DataForm" method="post" class="space-y-6">
        <div>
            <label asp-for="ObstacleName" class="block text-sm font-medium mb-1 text-gray-700">Name:</label>
            <input asp-for="ObstacleName" placeholder="E.g., Flagpole"
                   class="w-full border border-gray-300 rounded-md p-2 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 transition duration-150 ease-in-out" />
            <span asp-validation-for="ObstacleName" class="text-base text-red-600 font-mono"></span>
        </div>

        <div>
            <label asp-for="ObstacleHeight" class="block text-sm font-medium mb-1 text-gray-700">Height in meters:</label>
            <input asp-for="ObstacleHeight" placeholder="E.g., 15"
                   class="w-full border border-gray-300 rounded-md p-2 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 transition duration-150 ease-in-out" />
            <span asp-validation-for="ObstacleHeight" class="text-base text-red-600 font-mono"></span>
        </div>

        <div>
            <label asp-for="ObstacleDescription" class="block text-sm font-medium mb-1 text-gray-700">Description:</label>
            <textarea asp-for="ObstacleDescription" rows="4" placeholder="E.g., A large flagpole in the park."
                      class="w-full border border-gray-300 rounded-md p-2 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 transition duration-150 ease-in-out"></textarea>
            <span asp-validation-for="ObstacleDescription" class="text-base text-red-600 font-mono"></span>
        </div>

        <div>
            <label class="block text-sm font-medium mb-1 text-gray-700">Mark obstacle on map:</label>
            <div id="mapid" class="w-full h-80 rounded-md"></div>
            <input type="hidden" asp-for="ObstacleGeometry" />
            <span asp-validation-for="ObstacleGeometry" class="text-base text-red-600 font-mono"></span>
        </div>

        <button type="submit"
                class="w-full sm:w-auto inline-flex justify-center items-center rounded-md bg-blue-600 px-4 py-2 text-white font-medium hover:bg-blue-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600 transition duration-150 ease-in-out">
            Submit
        </button>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            // Initialisering av kartet
            const map = L.map('mapid').setView([60.4720, 8.4689], 5);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // Feature Group: Lager et lag for å holde på tegnede objekter
            const drawnItems = new L.FeatureGroup();
            map.addLayer(drawnItems);

            // Initialiserer tegneverktøyene fra Leaflet.draw (tillater markør og linje)
            const drawControl = new L.Control.Draw({
                edit: { featureGroup: drawnItems },
                draw: {
                    polygon: false,
                    marker: true, // Tillat markør
                    circle: false,
                    rectangle: false,
                    circlemarker: false,
                    polyline: true // Tillat linje
                }
            });
            map.addControl(drawControl);

            // Hendelse når en ny form (punkt/linje) er ferdig tegnet
            map.on(L.Draw.Event.CREATED, function (e) {
                drawnItems.clearLayers(); // Sørger for at kun ett objekt er registrert
                const layer = e.layer;
                drawnItems.addLayer(layer);

                // Konverterer det tegnede Leaflet-laget til GeoJSON-format
                const geoJson = layer.toGeoJSON();

                // Lagrer GeoJSON-strengen i det skjulte inputfeltet for sending til serveren
                document.getElementById('ObstacleGeometry').value = JSON.stringify(geoJson);
            });
        });
    </script>
}