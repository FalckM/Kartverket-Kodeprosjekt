name: dockercompose11258753134575746774
services:
  firstwebapplication:
    build:
      context: C:\Users\matsf\Documents\Skole\Kodeprosjekt_2_sem\Kartverket-Kodeprosjekt
      dockerfile: FirstWebApplication/Dockerfile
    container_name: webapp
    depends_on:
      mariadb:
        condition: service_healthy
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Server=mariadb;Port=3306;Database=ObstacleDB;User=obstacleuser;Password=1234;
    image: firstwebapplication
    networks:
      appnet: null
    ports:
      - mode: ingress
        target: 8080
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\matsf\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\matsf\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\matsf\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\matsf\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  mariadb:
    container_name: mariadbcontainer
    environment:
      MYSQL_DATABASE: ObstacleDB
      MYSQL_PASSWORD: "1234"
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_USER: obstacleuser
    healthcheck:
      test:
        - CMD
        - healthcheck.sh
        - --connect
        - --innodb_initialized
      timeout: 5s
      interval: 10s
      retries: 5
    image: mariadb:10.11
    networks:
      appnet: null
    ports:
      - mode: ingress
        target: 3306
        published: "3306"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mariadb_data
        target: /var/lib/mysql
        volume: {}
networks:
  appnet:
    name: dockercompose11258753134575746774_appnet
    driver: bridge
volumes:
  mariadb_data:
    name: dockercompose11258753134575746774_mariadb_data
    driver: local